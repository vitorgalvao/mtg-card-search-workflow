#!/usr/bin/osascript -l JavaScript

function envVar(varName) {
  return $.NSProcessInfo
    .processInfo
    .environment
    .objectForKey(varName).js
}

function readMetadata(mdkey, path) {
  // Read plist
  const task = $.NSTask.alloc.init
  const stdout = $.NSPipe.pipe

  task.executableURL = $.NSURL.fileURLWithPath("/usr/bin/xattr")
  task.arguments = ["-p", `com.apple.metadata:${mdkey}`, path]
  task.standardOutput = stdout
  task.launchAndReturnError(false)

  const dataOut = stdout.fileHandleForReading.readDataToEndOfFileAndReturnError(false)
  return $.NSPropertyListSerialization.propertyListWithDataOptionsFormatError(dataOut, [], undefined, undefined).js
}

function writeMetadata(mdKey, path, newValue) {
  // Convert to plist
  const plistData = $.NSPropertyListSerialization.dataWithPropertyListFormatOptionsError(newValue, $.NSPropertyListXMLFormat_v1_0, 0, undefined)
  const plistString = $.NSString.alloc.initWithDataEncoding(plistData, $.NSUTF8StringEncoding).js

  // Write plist
  const task = $.NSTask.alloc.init
  task.executableURL = $.NSURL.fileURLWithPath("/usr/bin/xattr")
  task.arguments = ["-w", `com.apple.metadata:${mdKey}`, plistString, path]
  task.launchAndReturnError(false)
}

function run(argv) {
  const writeMode = argv[0] === "write"
  const images = argv.slice(1)

  // Write
  if (writeMode) {
    writeMetadata("kMDItemWhereFroms", images[0], envVar("card_url"))
    writeMetadata("kMDItemTitle", images[0], envVar("card_name"))
    return
  }

  // Decompose to Grid JSON
  const sfItems = images.map(imagePath => {
    const cardURL = readMetadata("kMDItemWhereFroms", imagePath)
    const cardName = readMetadata("kMDItemTitle", imagePath)

    return {
      variables: {
        card_url: cardURL,
        card_name: cardName },
      title: cardName,
      subtitle: "↩ Larger Preview · ⇧↩ Open on Scryfall · ⌥↩ Copy Scryfall URL · ⌃↩ Copy Card Name",
      type: "file:skipcheck",
      text: { copy: cardName },
      icon: { path: imagePath },
      arg: imagePath
    }
  })

  return JSON.stringify({ items: sfItems })
}
